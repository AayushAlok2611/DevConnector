{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","actions/profile.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/layout/Alert.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","guestLinks","Fragment","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","action","placeholder","required","minLength","login","getCurrentProfile","statusText","status","createProfile","history","edit","push","Spinner","src","style","width","margin","display","alt","DashboardActions","deleteExperience","delete","experience","experiences","map","exp","company","format","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Component","component","rest","render","props","withRouter","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","displaySocialInputs","setDisplaySocialInputs","profileData","key","social","alerts","alert","addExperience","put","title","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","length","PostItem","addLike","removeLike","deletePost","text","likes","comments","date","showActions","defaultProps","postId","addPost","setText","getPosts","posts","initialState","getItem","repos","combineReducers","filter","setItem","removeItem","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ProfileTop","href","rel","Object","entries","ProfileAbout","trim","split","ProfileExperience","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","addComment","deleteComment","commentId","getPost","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.90e1b3f7.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const GET_PROFILE = 'GET_PROFILE';\r\nexport const GET_PROFILES = 'GET_PROFILES';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const NO_REPOS = 'NO_REPOS';\r\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\r\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\r\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\r\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const GET_POST = 'GET_POST';\r\nexport const POST_ERROR = 'POST_ERROR';\r\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';","import {SET_ALERT,REMOVE_ALERT} from \"./types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n//Dispatching async action poosible because of \"thunk\" middleware\r\nexport const setAlert = (msg,alertType,timeout = 5000) => {    // can also be writtn as ()=>dispatch=>{}\r\n    return function (dispatch) {\r\n        const id = uuidv4();\r\n        dispatch({\r\n            type:SET_ALERT,\r\n            payload:{msg,alertType,id}\r\n        });\r\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n    }\r\n}\r\n","//if token in localStorage , added to headers\r\nimport axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n    if(token){\r\n        axios.defaults.headers.common['x-auth-token'] = token;\r\n    }\r\n    else\r\n    {\r\n        delete axios.defaults.headers.common['x-auth-token'];\r\n    }\r\n}\r\n\r\nexport default setAuthToken;","import axios from 'axios';\r\nimport {setAlert} from './alert';\r\nimport {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    CLEAR_PROFILE\r\n} from \"./types\";\r\nimport setAuthToken from '../utils/setAuthToken';\r\n\r\n//Load User\r\nexport const loadUser = () => async dispatch => {\r\n  if(localStorage.token){\r\n        setAuthToken(localStorage.token);\r\n    }  \r\n    try {\r\n        const res = await axios.get('/api/auth'); //here res.data gives the details of the user havinf the provided token\r\n        dispatch({\r\n            type:USER_LOADED,\r\n            payload:res.data \r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n\r\n//Register User\r\nexport const register = ({name,email,password}) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            \"Content-type\":'Application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({name,email,password});\r\n    try {\r\n        const res = await axios.post('api/users',body,config);\r\n        dispatch({\r\n            type:REGISTER_SUCCESS,\r\n            payload:res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors; //this comes from backend as a result of errors produced by express-validator\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,\"danger\"));\r\n            });\r\n        }\r\n        dispatch({type:REGISTER_FAIL});\r\n    }\r\n}\r\n\r\n//Login User\r\nexport const login = (email,password) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            \"Content-type\":'Application/json'\r\n        }\r\n    }\r\n    const body = JSON.stringify({email,password});\r\n    try {\r\n        const res = await axios.post('api/auth',body,config);\r\n        dispatch({\r\n            type:LOGIN_SUCCESS,\r\n            payload:res.data\r\n        });\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        const errors = err.response.data.errors; //this comes from backend as a result of errors produced by express-validator\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,\"danger\"));\r\n            });\r\n        }\r\n        dispatch({type:LOGIN_FAIL});\r\n    }\r\n}\r\n\r\n//Logout / CLear profiles\r\n\r\nexport const logout = () =>  dispatch => {\r\n    dispatch({type:CLEAR_PROFILE}); //CLEAR PROFILE action in profile reducer but triggered from auth actions\r\n    dispatch({type:LOGOUT});\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {logout} from \"../../actions/auth\";\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nfunction Navbar({ auth: { isAuthenticated,loading }, logout }) {\r\n    const authLinks = (\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/profiles\">Developers</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/posts\">Posts</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/dashboard\" >\r\n            <i className=\"fas fa-user\" />{' '}\r\n            <span className = \"hide-sm\">Dashboard</span>\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"#!\" onClick={logout}>\r\n            <i className=\"fas fa-sign-out-alt\" />{' '}\r\n            <span className = \"hide-sm\">Logout</span>\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/profiles\">Developers</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/register\">Register</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/login\">Login</Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    return (\r\n        \r\n    <nav className=\"navbar bg-dark\">\r\n      <h1>\r\n        <Link to=\"/\"><i className=\"fas fa-code\"></i> DevConnector</Link>\r\n      </h1>\r\n      {!loading && (<React.Fragment>{isAuthenticated?authLinks:guestLinks}</React.Fragment>)}\r\n    </nav>\r\n        \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar);\r\n","import React from 'react'\r\nimport {Link,Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Landing({isAuthenticated}) {\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n    return (\r\n      <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"landing-inner\">\r\n          <h1 className=\"x-large\">Developer Connector</h1>\r\n          <p className=\"lead\">\r\n            Create a developer profile/portfolio, share posts and get help from\r\n            other developers\r\n          </p>\r\n          <div className=\"buttons\">\r\n            <Link to=\"/register\" className=\"btn btn-primary\">Sign Up</Link>\r\n            <Link to=\"/login\" className=\"btn btn-light\">Login</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React,{useState} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {Link,Redirect} from \"react-router-dom\";\r\nimport {setAlert} from \"../../actions/alert\";\r\nimport {register} from \"../../actions/auth\";\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Register({setAlert,register,isAuthenticated}) {  //destructring props\r\n    const [formData, setFormData] = useState({\r\n        name:\"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        password2:\"\"\r\n    })\r\n    \r\n    const {name,email,password,password2}  = formData;\r\n\r\n    const onChange = (e) => {\r\n        setFormData({...formData,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if(password !== password2)\r\n        {\r\n            setAlert(\"Passwords do not match\",\"danger\");\r\n        }\r\n        else\r\n        { \r\n          register({name,email,password});\r\n        }\r\n    }\r\n    if (isAuthenticated) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    return (\r\n    <>\r\n        <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\"><i className=\"fas fa-user\"></i> Create Your Account</p>\r\n      <form className=\"form\" action=\"create-profile.html\" onSubmit={e=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Name\" name=\"name\" required value={name} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e=>onChange(e)} required/>\r\n          <small className=\"form-text\"\r\n            >This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password} onChange={e=>onChange(e)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            minLength=\"6\"\r\n            value={password2} onChange={e=>onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"login.html\">Sign In</Link>\r\n      </p>\r\n    </>\r\n    )\r\n}\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps,{setAlert,register})(Register);\r\n","import React,{useState} from 'react'\r\nimport {Link,Redirect} from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../actions/auth';\r\n\r\nfunction Login({login,isAuthenticated}) {\r\n    const [formData, setFormData] = useState({\r\n        email:\"\",\r\n        password:\"\",\r\n    })\r\n    \r\n    const {email,password}  = formData;\r\n\r\n    const onChange = (e) => {\r\n        setFormData({...formData,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        login(email,password);\r\n    }\r\n\r\n    //Rediredt if logged in\r\n    if (isAuthenticated) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    }\r\n    \r\n    return (\r\n    <>\r\n        <h1 className=\"large text-primary\">Login</h1>\r\n        <p className=\"lead\"><i className=\"fas fa-user\"></i> Sign Into Your Account</p>\r\n      <form className=\"form\" action=\"create-profile.html\" onSubmit={e=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input type=\"email\" placeholder=\"Email Address\" name=\"email\" value={email} onChange={e=>onChange(e)}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            minLength=\"6\"\r\n            value={password} onChange={e=>onChange(e)}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Sign In\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Dont have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_PROFILE,\r\n  GET_PROFILES,\r\n  PROFILE_ERROR,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  ACCOUNT_DELETED,\r\n  GET_REPOS,\r\n  NO_REPOS\r\n} from './types';\r\n\r\n//Get current user's profile\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n    } catch (err) { //if request fails then err object created \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Get all profiles\r\nexport const getProfiles = () => async dispatch => {\r\n    dispatch({type:CLEAR_PROFILE});\r\n    try {\r\n        const res = await axios.get('/api/profile');\r\n        dispatch({\r\n            type:GET_PROFILES,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n    } catch (err) { //if request fails then err object created \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Get profile by id\r\nexport const getProfileById = (userId) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/user/${userId}`);\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n    } catch (err) { //if request fails then err object created \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Get github repos\r\nexport const getGithubRepos = (githubusername) => async dispatch => {\r\n    try {\r\n        const res = await axios.get(`/api/profile/github/${githubusername}`);\r\n        dispatch({\r\n            type:GET_REPOS,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n    } catch (err) { //if request fails then err object created \r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Create / Update a profile\r\nexport const createProfile = (formData,history,edit=false) =>async dispatch =>{  //edit tells if we are editing a profile or creating a new one\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                \"Content-type\":\"Application/json\",\r\n            }\r\n        }\r\n        const res = await axios.post(\"/api/profile\",formData,config);\r\n        dispatch({\r\n            type:GET_PROFILE,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n        dispatch(setAlert(edit?'Profile Updated':'Profile Created',\"success\"));\r\n        if(!edit) //if not editing then redirect\r\n        {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors; //this comes from backend as a result of errors produced by express-validator\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,\"danger\"));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Add experience\r\nexport const addExperience = (formData,history)=>async dispatch=>{\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                \"Content-type\":\"Application/json\",\r\n            }\r\n        }\r\n        const res = await axios.put(\"/api/profile/experience\",formData,config);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n        dispatch(setAlert('Experience Added',\"success\"));\r\n        history.push('/dashboard');\r\n\r\n    } catch (err) {\r\n        const errors = err.response.data.errors; //this comes from backend as a result of errors produced by express-validator\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,\"danger\"));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Add education\r\nexport const addEducation = (formData,history)=>async dispatch=>{\r\n    try {\r\n        const config = {\r\n            headers:{\r\n                \"Content-type\":\"Application/json\",\r\n            }\r\n        }\r\n        const res = await axios.put(\"/api/profile/education\",formData,config);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data, //upon succesfull returning of response we get the profile data of current user in res.data\r\n        })\r\n        dispatch(setAlert('Education Added',\"success\"));\r\n        history.push('/dashboard');\r\n        \r\n    } catch (err) {\r\n        const errors = err.response.data.errors; //this comes from backend as a result of errors produced by express-validator\r\n        if(errors){\r\n            errors.forEach(error => {\r\n                dispatch(setAlert(error.msg,\"danger\"));\r\n            });\r\n        }\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete Expereince\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res =await axios.delete(`/api/profile/experience/${id}`);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert('Experience Deleted',\"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Delete Education\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res =await axios.delete(`/api/profile/education/${id}`);\r\n        dispatch({\r\n            type:UPDATE_PROFILE,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert('Education Deleted',\"success\"));\r\n    } catch (err) {\r\n        dispatch({\r\n            type:PROFILE_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure ?This cant be undone'))\r\n    {\r\n        try {\r\n            const res =await axios.delete(`/api/profile`);\r\n            dispatch({\r\n                type:CLEAR_PROFILE,\r\n            });\r\n            dispatch({\r\n                type:ACCOUNT_DELETED\r\n            })\r\n            dispatch(setAlert('Your account has been permanently deleted'));\r\n        } catch (err) {\r\n            dispatch({\r\n                type:PROFILE_ERROR,\r\n                payload:{\r\n                    msg:err.response.statusText,\r\n                    status:err.response.status\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import React, { Fragment } from 'react';\r\n\r\nconst Spinner = () => (\r\n  <Fragment>\r\n    <img\r\n      src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n      alt=\"Loading...\"\r\n    />\r\n  </Fragment>\r\n);\r\n\r\nexport default Spinner;","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst DashboardActions = () => {\r\n    return (\r\n        <div className=\"dash-buttons\">\r\n        <Link to=\"/edit-profile\" className=\"btn btn-light\"\r\n          ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link\r\n        >\r\n        <Link to=\"/add-experience\" className=\"btn btn-light\"\r\n          ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience\r\n          </Link>\r\n        <Link to=\"/add-education\" className=\"btn btn-light\"\r\n          ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education\r\n        </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default DashboardActions\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment';\r\nimport { deleteExperience } from '../../actions/profile';\r\n\r\nconst Experience = ({experience,deleteExperience}) => { //experience props passed from parent\r\n    const experiences = experience.map(exp => (\r\n        <tr key={exp._id}>\r\n            <td className=\"hide-sm\"> {exp.company}</td>\r\n            <td>\r\n                <Moment format=\"YYYY/DD/MM\">{exp.from}</Moment> - {\r\n                    exp.to==null?('Now'):(<Moment format=\"YYYY/DD/MM\">{exp.to}</Moment>)\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={()=>deleteExperience(exp._id)} className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <>\r\n           <h2 className=\"my-2\">Experience Credentials</h2> \r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Company</th>\r\n                        <th className='hide-sm'>Title</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th/>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {experiences}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nExperience.propTypes = {\r\n    experience:PropTypes.array.isRequired,\r\n    deleteExperience:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{deleteExperience})(Experience);\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'react-moment';\r\nimport { deleteEducation } from '../../actions/profile';\r\n\r\nconst Education = ({education,deleteEducation}) => { //experience props passed from parent\r\n    const educations = education.map(edu => (\r\n        <tr key={edu._id}>\r\n            <td className=\"hide-sm\"> {edu.school}</td>\r\n            <td className=\"hide-sm\"> {edu.degree}</td>\r\n            <td>\r\n                <Moment format=\"YYYY/DD/MM\">{edu.from}</Moment> - {\r\n                    edu.to==null?('Now'):(<Moment format=\"YYYY/DD/MM\">{edu.to}</Moment>)\r\n                }\r\n            </td>\r\n            <td>\r\n                <button onClick={()=>deleteEducation(edu._id)} className=\"btn btn-danger\">Delete</button>\r\n            </td>\r\n        </tr>\r\n    ))\r\n    return (\r\n        <>\r\n           <h2 className=\"my-2\">Education Credentials</h2> \r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>School</th>\r\n                        <th className='hide-sm'>Degree</th>\r\n                        <th className='hide-sm'>Years</th>\r\n                        <th/>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {educations}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nEducation.propTypes = {\r\n    education:PropTypes.array.isRequired,\r\n    deleteEducation:PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null,{deleteEducation})(Education)\r\n","import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getCurrentProfile} from '../../actions/profile';\r\nimport Spinner from \"../layout/Spinner\";\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { deleteAccount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({getCurrentProfile,auth:{user},profile:{profile,loading},deleteAccount}) => {\r\n    useEffect(()=>{\r\n        getCurrentProfile();\r\n    },[getCurrentProfile])\r\n    return loading && profile===null ? <Spinner/>:\r\n    <React.Fragment>\r\n        <h1 className=\"large text-primary\"> Dashboard</h1>\r\n        <p className=\"lead\">\r\n            <i className=\"fa fa-user\"></i>{\" \"}Welcome {user && user.name}\r\n        </p>\r\n        {profile!==null ? \r\n        <React.Fragment>\r\n            <DashboardActions/>\r\n            <Experience experience={profile.experience} />\r\n            <Education education={profile.education}/>\r\n            <div className=\"my-2\">\r\n                <button className=\"btn btn-danger\" onClick={()=>deleteAccount()}>\r\n                    <i className=\"fas fas-user\"></i>Delete My account\r\n                </button>\r\n            </div>\r\n        </React.Fragment>:\r\n        <React.Fragment>\r\n            <p>You have not yet setup a profile, please add some info</p>\r\n            <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\r\n            Create Profile\r\n            </Link>\r\n        </React.Fragment>}\r\n    </React.Fragment>;\r\n}\r\n\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    deleteAccount:PropTypes.func.isRequired,\r\n  };\r\nconst mapStateToProps = (state)=>({\r\n    auth:state.auth,\r\n    profile:state.profile\r\n})\r\n\r\nexport default connect(mapStateToProps,{getCurrentProfile,deleteAccount})(Dashboard);\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst PrivateRoute = ({\r\n    component: Component,\r\n    auth: { isAuthenticated, loading },\r\n    ...rest\r\n  }) => (\r\n    <Route {...rest}\r\n      render={props => !isAuthenticated && !loading ? (<Redirect to=\"/login\" />) : (<Component {...props}/>)}\r\n    />\r\n  );\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    auth: state.auth\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(PrivateRoute);\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { createProfile } from '../../actions/profile';\r\nimport { Link,withRouter } from 'react-router-dom';\r\n\r\nconst CreateProfile = ({createProfile,history}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    })\r\n    const { company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram} = formData;\r\n\r\n    const [displaySocialInputs, setDisplaySocialInputs] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n        setFormData({...formData,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData,history);\r\n    }\r\n    return (\r\n    <>\r\n        <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit = {(e)=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e)=>onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={(e)=>onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e)=>onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={()=>setDisplaySocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {\r\n            displaySocialInputs &&\r\n            <>\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n            </>\r\n        }\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n    </>\r\n    )\r\n}\r\n\r\nCreateProfile.propTypes = {\r\n    createProfile:PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default connect(null,{createProfile})(withRouter(CreateProfile)) ;\r\n","import React,{useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux';\r\nimport { createProfile ,getCurrentProfile } from '../../actions/profile';\r\nimport { Link,withRouter } from 'react-router-dom';\r\n\r\nconst EditProfile = ({profile:{profile,loading},createProfile,history,getCurrentProfile}) => {\r\n    const [formData, setFormData] = useState({\r\n        company: '',\r\n        website: '',\r\n        location: '',\r\n        status: '',\r\n        skills: '',\r\n        githubusername: '',\r\n        bio: '',\r\n        twitter: '',\r\n        facebook: '',\r\n        linkedin: '',\r\n        youtube: '',\r\n        instagram: ''\r\n    })\r\n\r\n    useEffect(()=>{\r\n        if (!profile) getCurrentProfile();\r\n        if (!loading && profile) {\r\n            const profileData = { ...formData };\r\n            for (const key in profile) {\r\n                if (key in profileData) profileData[key] = profile[key];\r\n            }\r\n            for (const key in profile.social) {\r\n                if (key in profileData) profileData[key] = profile.social[key];\r\n            }\r\n            setFormData(profileData);\r\n        }\r\n    },[loading,getCurrentProfile]);\r\n\r\n    const { company,\r\n    website,\r\n    location,\r\n    status,\r\n    skills,\r\n    githubusername,\r\n    bio,\r\n    twitter,\r\n    facebook,\r\n    linkedin,\r\n    youtube,\r\n    instagram} = formData;\r\n\r\n    const [displaySocialInputs, setDisplaySocialInputs] = useState(false);\r\n\r\n    const onChange = (e) => {\r\n        setFormData({...formData,[e.target.name]:e.target.value});\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n        createProfile(formData,history,true);\r\n    }\r\n    return (\r\n    <>\r\n        <h1 className=\"large text-primary\">\r\n        Create Your Profile\r\n      </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Let's get some information to make your\r\n        profile stand out\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form className=\"form\" onSubmit = {(e)=>onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <select name=\"status\" value={status} onChange={(e)=>onChange(e)}>\r\n            <option value=\"0\">* Select Professional Status</option>\r\n            <option value=\"Developer\">Developer</option>\r\n            <option value=\"Junior Developer\">Junior Developer</option>\r\n            <option value=\"Senior Developer\">Senior Developer</option>\r\n            <option value=\"Manager\">Manager</option>\r\n            <option value=\"Student or Learning\">Student or Learning</option>\r\n            <option value=\"Instructor\">Instructor or Teacher</option>\r\n            <option value=\"Intern\">Intern</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <small className=\"form-text\"\r\n            >Give us an idea of where you are at in your career</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Company\" name=\"company\" value={company} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own company or one you work for</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Website\" name=\"website\" value={website} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Could be your own or a company website</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"Location\" name=\"location\" value={location} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >City & state suggested (eg. Boston, MA)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"text\" placeholder=\"* Skills\" name=\"skills\" value={skills} onChange={(e)=>onChange(e)}/>\r\n          <small className=\"form-text\"\r\n            >Please use comma separated values (eg.\r\n            HTML,CSS,JavaScript,PHP)</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Github Username\"\r\n            name=\"githubusername\"\r\n            value={githubusername} onChange={(e)=>onChange(e)}\r\n          />\r\n          <small className=\"form-text\"\r\n            >If you want your latest repos and a Github link, include your\r\n            username</small\r\n          >\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea placeholder=\"A short bio of yourself\" name=\"bio\" value={bio} onChange={(e)=>onChange(e)}></textarea>\r\n          <small className=\"form-text\">Tell us a little about yourself</small>\r\n        </div>\r\n\r\n        <div className=\"my-2\">\r\n          <button onClick={()=>setDisplaySocialInputs(!displaySocialInputs)} type=\"button\" className=\"btn btn-light\">\r\n            Add Social Network Links\r\n          </button>\r\n          <span>Optional</span>\r\n        </div>\r\n        {\r\n            displaySocialInputs &&\r\n            <>\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-twitter fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Twitter URL\" name=\"twitter\" value={twitter} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-facebook fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Facebook URL\" name=\"facebook\" value={facebook} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-youtube fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"YouTube URL\" name=\"youtube\" value={youtube} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-linkedin fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Linkedin URL\" name=\"linkedin\" value={linkedin} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n\r\n                <div className=\"form-group social-input\">\r\n                <i className=\"fab fa-instagram fa-2x\"></i>\r\n                <input type=\"text\" placeholder=\"Instagram URL\" name=\"instagram\" value={instagram} onChange={(e)=>onChange(e)}/>\r\n                </div>\r\n            </>\r\n        }\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">Go Back</Link>\r\n      </form>\r\n    </>\r\n    )\r\n}\r\n\r\nEditProfile.propTypes = {\r\n    createProfile:PropTypes.func.isRequired,\r\n    getCurrentProfile:PropTypes.func.isRequired,\r\n    profile:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    profile:state.profile\r\n});\r\n\r\nexport default connect(mapStateToProps,{createProfile,getCurrentProfile})(withRouter(EditProfile)) ;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nconst Alert = ({ alerts }) =>\r\n  alerts.map((alert) => (\r\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\r\n      {alert.msg}\r\n    </div>\r\n  ));\r\n  \r\nAlert.propTypes = {\r\n  alerts: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ // we get state from redux and we added a prop called \"alerts\" with the value state.alert\r\n    alerts:state.alert\r\n})\r\n\r\nexport default connect(mapStateToProps)(Alert);\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addExperience } from '../../actions/profile';\r\n\r\nconst AddExperience = ({ addExperience, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    company: '',\r\n    title: '',\r\n    location: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const { company, title, location, from, to, current, description } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add An Experience</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any developer/programming\r\n        positions that you have had in the past\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addExperience(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Job Title\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Company\"\r\n            name=\"company\"\r\n            value={company}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Location\"\r\n            name=\"location\"\r\n            value={location}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => {\r\n                setFormData({ ...formData, current: !current });\r\n              }}\r\n            />{' '}\r\n            Current Job\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Job Description\"\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddExperience.propTypes = {\r\n  addExperience: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addExperience })(withRouter(AddExperience));","import React, { Fragment, useState } from 'react';\r\nimport { Link ,withRouter} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addEducation } from '../../actions/profile';\r\n\r\nconst AddEducation = ({ addEducation, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    school: '',\r\n    degree: '',\r\n    fieldofstudy: '',\r\n    from: '',\r\n    to: '',\r\n    current: false,\r\n    description: ''\r\n  });\r\n\r\n  const {\r\n    school,\r\n    degree,\r\n    fieldofstudy,\r\n    from,\r\n    to,\r\n    description,\r\n    current\r\n  } = formData;\r\n\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Add Your Education</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-code-branch\" /> Add any school or bootcamp that you\r\n        have attended\r\n      </p>\r\n      <small>* = required field</small>\r\n      <form\r\n        className=\"form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addEducation(formData, history);\r\n        }}\r\n      >\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* School or Bootcamp\"\r\n            name=\"school\"\r\n            value={school}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"* Degree or Certificate\"\r\n            name=\"degree\"\r\n            value={degree}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Field of Study\"\r\n            name=\"fieldofstudy\"\r\n            value={fieldofstudy}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>From Date</h4>\r\n          <input type=\"date\" name=\"from\" value={from} onChange={onChange} />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"current\"\r\n              checked={current}\r\n              value={current}\r\n              onChange={() => setFormData({ ...formData, current: !current })}\r\n            />{' '}\r\n            Current School\r\n          </p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <h4>To Date</h4>\r\n          <input\r\n            type=\"date\"\r\n            name=\"to\"\r\n            value={to}\r\n            onChange={onChange}\r\n            disabled={current}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            name=\"description\"\r\n            cols=\"30\"\r\n            rows=\"5\"\r\n            placeholder=\"Program Description\"\r\n            value={description}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary my-1\" />\r\n        <Link className=\"btn btn-light my-1\" to=\"/dashboard\">\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddEducation.propTypes = {\r\n  addEducation: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, { addEducation })(withRouter(AddEducation));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileItem = ({\r\n  profile: {\r\n    user: { _id, name, avatar },\r\n    status,\r\n    company,\r\n    location,\r\n    skills\r\n  }\r\n}) => {\r\n  return (\r\n    <div className='profile bg-light'>\r\n      <img src={avatar} alt='' className='round-img' />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>\r\n          {status} {company && <span> at {company}</span>}\r\n        </p>\r\n        <p className='my-1'>{location && <span>{location}</span>}</p>\r\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\r\n          View Profile\r\n        </Link>\r\n      </div>\r\n      <ul>\r\n        {skills.slice(0, 4).map((skill, index) => (\r\n          <li key={index} className='text-primary'>\r\n            <i className='fas fa-check' /> {skill}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileItem.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileItem;","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileItem from './ProfileItem';\r\nimport { getProfiles } from '../../actions/profile';\r\n\r\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\r\n  useEffect(() => {\r\n    getProfiles();\r\n  }, [getProfiles]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <h1 className='large text-primary'>Developers</h1>\r\n          <p className='lead'>\r\n            <i className='fab fa-connectdevelop' /> Browse and connect with\r\n            developers\r\n          </p>\r\n          <div className='profiles'>\r\n            {profiles.length > 0 ? (\r\n              profiles.map(profile => (\r\n                <ProfileItem key={profile._id} profile={profile} />\r\n              ))\r\n            ) : (\r\n              <h4>No profiles found...</h4>\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfiles.propTypes = {\r\n  getProfiles: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  profile: state.profile\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProfiles }\r\n)(Profiles);","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addLike, removeLike, deletePost } from '../../actions/post';\r\nimport Moment from 'react-moment';\r\n\r\nconst PostItem = ({\r\n  addLike,\r\n  removeLike,\r\n  deletePost,\r\n  auth,\r\n  post: { _id, text, name, avatar, user, likes, comments, date },\r\n  showActions\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment></p>\r\n\r\n      {showActions && (\r\n        <Fragment>\r\n          <button\r\n            onClick={() => addLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-up\" />{' '}\r\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\r\n          </button>\r\n          <button\r\n            onClick={() => removeLike(_id)}\r\n            type=\"button\"\r\n            className=\"btn btn-light\"\r\n          >\r\n            <i className=\"fas fa-thumbs-down\" />\r\n          </button>\r\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\r\n            Discussion{' '}\r\n            {comments.length > 0 && (\r\n              <span className=\"comment-count\">{comments.length}</span>\r\n            )}\r\n          </Link>\r\n          {!auth.loading && user === auth.user._id && (\r\n            <button\r\n              onClick={() => deletePost(_id)}\r\n              type=\"button\"\r\n              className=\"btn btn-danger\"\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </button>\r\n          )}\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nPostItem.defaultProps = {\r\n  showActions: true\r\n};\r\n\r\nPostItem.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  addLike: PropTypes.func.isRequired,\r\n  removeLike: PropTypes.func.isRequired,\r\n  deletePost: PropTypes.func.isRequired,\r\n  showActions: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\r\n  PostItem\r\n);","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from './types';\r\n\r\n//Get all posts\r\nexport const getPosts = ()=>async dispatch=>{\r\n    try {\r\n        const res = await axios.get('/api/posts');\r\n        dispatch({\r\n            type:GET_POSTS,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Add like\r\nexport const addLike = (postId)=>async dispatch=>{\r\n    try {\r\n        const res = await axios.put(`/api/posts/like/${postId}`);\r\n        dispatch({\r\n            type:UPDATE_LIKES,\r\n            payload:{\r\n                postId,\r\n                likes:res.data\r\n            }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// Remove like\r\nexport const removeLike = (postId)=>async dispatch=>{\r\n    try {\r\n        const res = await axios.put(`/api/posts/unlike/${postId}`);\r\n        dispatch({\r\n            type:UPDATE_LIKES,\r\n            payload:{\r\n                postId,\r\n                likes:res.data\r\n            }\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Delete post\r\nexport const deletePost = (postId) => async dispatch => {\r\n    try {\r\n        await axios.delete(`/api/posts/${postId}`);\r\n        dispatch({\r\n            type:DELETE_POST,\r\n            payload:postId\r\n        })\r\n        dispatch(setAlert(\"Post Removed\",\"success\"))\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Add post\r\nexport const addPost = (formData) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            \"Content-type\":\"Application/json\"\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/posts`,formData,config);\r\n        dispatch({\r\n            type:ADD_POST,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert(\"Post Created\",\"success\"))\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n//Get single post\r\nexport const getPost = (postId)=>async dispatch=>{\r\n    try {\r\n        const res = await axios.get(`/api/posts/${postId}`);\r\n        dispatch({\r\n            type:GET_POST,\r\n            payload:res.data\r\n        })\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//Add comment\r\nexport const addComment = (postId,formData) => async dispatch => {\r\n    const config = {\r\n        headers:{\r\n            \"Content-type\":\"Application/json\"\r\n        }\r\n    }\r\n    try {\r\n        const res = await axios.post(`/api/posts/comment/${postId}`,formData,config);\r\n        dispatch({\r\n            type:ADD_COMMENT,\r\n            payload:res.data\r\n        })\r\n        dispatch(setAlert(\"Comment added\",\"success\"))\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n//delete comment\r\nexport const deleteComment = (postId,commentId) => async dispatch => {\r\n    try {\r\n        await axios.post(`/posts/comment/${postId}/${commentId}`);\r\n        dispatch({\r\n            type:REMOVE_COMMENT,\r\n            payload:commentId\r\n        })\r\n        dispatch(setAlert(\"Comment added\",\"success\"))\r\n    } catch (err) {\r\n        dispatch({\r\n            type:POST_ERROR,\r\n            payload:{\r\n                msg:err.response.statusText,\r\n                status:err.response.status\r\n            }\r\n        })\r\n    }\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../actions/post';\r\n\r\nconst PostForm = ({ addPost }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Say Something...</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addPost({ text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Create a post'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nPostForm.propTypes = {\r\n  addPost: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{ addPost })(PostForm);","import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport { getPosts } from '../../actions/post';\r\nimport Spinner from '../layout/Spinner';\r\nimport PostItem from './PostItem';\r\nimport PostForm from './PostForm';\r\n\r\nconst Posts = ({getPosts,post:{posts,loading}}) => {\r\n    useEffect(() => {\r\n        getPosts()\r\n    }, [getPosts])\r\n    return (\r\n        loading ? <Spinner/>:\r\n        <>\r\n      <h1 className=\"large text-primary\">Posts</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\" /> Welcome to the community\r\n      </p>\r\n      <PostForm />\r\n      <div className=\"posts\">\r\n        {posts.map((post) => (\r\n          <PostItem key={post._id} post={post} />\r\n        ))}\r\n      </div>\r\n    </>\r\n    )\r\n}\r\n\r\nPosts.propTypes = {\r\n    getPosts:PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    post:state.post,\r\n})\r\nexport default connect(mapStateToProps,{getPosts})(Posts)\r\n","import {SET_ALERT,REMOVE_ALERT} from \"../actions/types\";\r\n\r\nconst initialState=[];\r\n\r\nexport default function(state = initialState,action){\r\n    const {type,payload} = action;\r\n    switch(type){\r\n        case SET_ALERT:\r\n            return [...state,payload];  //action.payload = { id:\".. \",msg:\".. \",alertType:\"..\"}\r\n        case REMOVE_ALERT:\r\n            return state.filter(alert => alert.id !== payload); // action.payload = id\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    ACCOUNT_DELETED\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem('token'),\r\n    isAuthenticated: null, //whether current user id Authenticated or not\r\n    loading: true, \r\n    user: null //data of current user\r\n  };\r\n\r\n  export default function(state= initialState,action) {\r\n      const {type,payload} = action;\r\n      switch(type){\r\n        case USER_LOADED:\r\n          return{\r\n            ...state,\r\n            isAuthenticated:true,\r\n            loading:false,\r\n            user:payload\r\n          }\r\n        case REGISTER_SUCCESS: //on succesfull registration we get back the token from backend\r\n        case LOGIN_SUCCESS:\r\n        localStorage.setItem('token',payload.token);\r\n              return {\r\n                ...state,\r\n                ...payload,\r\n                loading:false,  //since we got user data\r\n                isAuthenticated:true\r\n              };\r\n        case REGISTER_FAIL:\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case ACCOUNT_DELETED:\r\n            localStorage.removeItem('token'); \r\n            return {\r\n                ...state,\r\n                token:null,\r\n                loading:false,  //since we got user data\r\n                isAuthenticated:false\r\n              };          \r\n        default:\r\n            return state;\r\n      }\r\n};\r\n\r\n\r\n","import {\r\n    GET_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE,\r\n    GET_PROFILES,\r\n    GET_REPOS,\r\n    NO_REPOS\r\n  } from '../actions/types';\r\n\r\n  \r\nconst initialState = {\r\n    profile:null, //hold the profile data of current user\r\n    profiles:[], //holds the data of the profiles of all the users\r\n    repos:[], //holds the data of github repos of current user\r\n    loading:true,\r\n    error:{}\r\n}\r\n\r\nexport default function(state=initialState,action) {\r\n    const {type,payload} = action;\r\n    switch(type){\r\n        case GET_PROFILE:\r\n        case UPDATE_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile:payload,\r\n                loading:false,\r\n            } \r\n        case GET_PROFILES:\r\n            return {\r\n                ...state,\r\n                profiles:payload,\r\n                loading:false,\r\n            }\r\n        case PROFILE_ERROR:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error:payload\r\n            };\r\n        case CLEAR_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile:null,\r\n                repos:[],\r\n                loading:false\r\n            }    \r\n        case GET_REPOS:\r\n            return{\r\n                ...state,\r\n                repos:payload,\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_POSTS,\r\n    POST_ERROR,\r\n    UPDATE_LIKES,\r\n    DELETE_POST,\r\n    ADD_POST,\r\n    GET_POST,\r\n    ADD_COMMENT,\r\n    REMOVE_COMMENT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    posts:[],\r\n    post:null,\r\n    loading:true,\r\n    error:{}\r\n}\r\n\r\nexport default function(state=initialState,action){\r\n    const {type,payload} = action;\r\n    switch(type){\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                posts:payload,\r\n                loading:false\r\n            };\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post:payload,\r\n                loading:false\r\n            }\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts:[payload,...state.posts],\r\n                loading:false\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts:state.posts.filter(post=>post._id!==payload),\r\n                loading:false\r\n            }\r\n        case POST_ERROR:\r\n            return { \r\n                ...state,\r\n                error:payload,\r\n                loading:false\r\n            };\r\n        case UPDATE_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map((post) =>\r\n                  post._id === payload.postId ? { ...post, likes: payload.likes } : post\r\n                ),\r\n                loading: false\r\n              };\r\n        case ADD_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: { ...state.post, comments: payload },\r\n                loading: false\r\n            };\r\n        case REMOVE_COMMENT:\r\n            return {\r\n                ...state,\r\n                post: {\r\n                ...state.post,\r\n                comments: state.post.comments.filter(\r\n                        (comment) => comment._id !== payload\r\n                    )\r\n                },\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport alert from \"./alert\";\r\nimport auth from \"./auth\";\r\nimport profile from './profile';\r\nimport post from './post';\r\n\r\n\r\nexport default combineReducers({\r\n    alert,\r\n    auth,\r\n    profile,\r\n    post,\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileTop = ({\r\n  profile: {\r\n    status,\r\n    company,\r\n    location,\r\n    website,\r\n    social,\r\n    user: { name, avatar }\r\n  }\r\n}) => {\r\n  return (\r\n    <div className=\"profile-top bg-primary p-2\">\r\n          <img\r\n            className=\"round-img my-1\"\r\n            src={avatar}\r\n            alt=\"\"\r\n          />\r\n          <h1 className=\"large\">{name}</h1>\r\n          <p className=\"lead\">{status} at {company && <span>at {company}</span>}</p>\r\n          <p>{location && <span>{location}</span>}</p>\r\n          <div className=\"icons my-1\">\r\n          {website ? (\r\n            <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <i className=\"fas fa-globe fa-2x\" />\r\n            </a>\r\n            ) : null}\r\n          {social\r\n          ? Object.entries(social)\r\n              .filter(([_, value]) => value) //fillter only those social media sites for which user has provided links\r\n              .map(([key, value]) => (\r\n                <a\r\n                  key={key}\r\n                  href={value}\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                  <i className={`fab fa-${key} fa-2x`}></i>\r\n                </a>\r\n              ))\r\n          : null}\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfileTop.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileTop;","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProfileAbout = ({\r\n  profile: {\r\n    bio,\r\n    skills,\r\n    user: { name }\r\n  }\r\n}) => (\r\n  <div className='profile-about bg-light p-2'>\r\n    {bio && (\r\n      <Fragment>\r\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}'s Bio</h2>\r\n        <p>{bio}</p>\r\n        <div className='line' />\r\n      </Fragment>\r\n    )}\r\n    <h2 className='text-primary'>Skill Set</h2>\r\n    <div className='skills'>\r\n      {skills.map((skill, index) => (\r\n        <div key={index} className='p-1'>\r\n          <i className='fas fa-check' /> {skill}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nProfileAbout.propTypes = {\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileAbout;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileExperience = ({experience:{\r\n    company,\r\n    title,\r\n    location,\r\n    current,\r\n    to,\r\n    from,\r\n    description\r\n}}) => {\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-dark\">{company}</h3>\r\n            <p>\r\n                <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? 'Now' :(<Moment format=\"YYYY/MM/DD\">{to}</Moment>)}\r\n            </p>\r\n            <p>\r\n                <strong>Position - </strong>{title}\r\n            </p>\r\n            <p>\r\n                <strong>Description - </strong>{description}\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileExperience.propTypes = {\r\n    experience:PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProfileExperience\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Moment from 'react-moment';\r\n\r\nconst ProfileEducation = ({\r\n  education: { school, degree, fieldofstudy, current, to, from, description }\r\n}) => (\r\n  <div>\r\n    <h3 className=\"text-dark\">{school}</h3>\r\n    <p>\r\n        <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? 'Now' :(<Moment format=\"YYYY/MM/DD\">{to}</Moment>)}\r\n    </p>\r\n    <p>\r\n      <strong>Degree: </strong> {degree}\r\n    </p>\r\n    <p>\r\n      <strong>Field Of Study: </strong> {fieldofstudy}\r\n    </p>\r\n    <p>\r\n      <strong>Description: </strong> {description}\r\n    </p>\r\n  </div>\r\n);\r\n\r\nProfileEducation.propTypes = {\r\n  education: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProfileEducation;","import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport { getGithubRepos } from '../../actions/profile';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nconst ProfileGithub = ({username,getGithubRepos,repos}) => {\r\n    useEffect(() => {\r\n        getGithubRepos(username);\r\n    }, [getGithubRepos,username]);\r\n    return (\r\n        <div className=\"profile-github\">\r\n            <h2 className=\"text-primary my-1\">5 most recent Github Repos</h2>\r\n            {   \r\n                repos===null ?\r\n                (<h3>No repos</h3>):(\r\n                repos.map(repo=>(\r\n                    <div key={repo.id} className=\"repo bg-white p-1 my-1\">\r\n                    <div>\r\n                      <h4>\r\n                        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          {repo.name}\r\n                        </a>\r\n                      </h4>\r\n                      <p>{repo.description}</p>\r\n                    </div>\r\n                    <div>\r\n                      <ul>\r\n                        <li className=\"badge badge-primary\">\r\n                          Stars: {repo.stargazers_count}\r\n                        </li>\r\n                        <li className=\"badge badge-dark\">\r\n                          Watchers: {repo.watchers_count}\r\n                        </li>\r\n                        <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                ))\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nProfileGithub.propTypes = {\r\n    getGithubRepos:PropTypes.func.isRequired,\r\n    repos:PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    repos:state.profile.repos\r\n})\r\n\r\nexport default connect(mapStateToProps,{getGithubRepos})(ProfileGithub);\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport ProfileGithub from './ProfileGithub';\r\nimport { getProfileById } from '../../actions/profile';\r\n\r\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\r\n  useEffect(() => {\r\n    getProfileById(match.params.id);\r\n  }, [getProfileById, match.params.id]);\r\n\r\n  return (\r\n    <Fragment>\r\n      {profile === null ? (\r\n        <Spinner />\r\n      ) : (\r\n        <Fragment>\r\n          <Link to=\"/profiles\" className=\"btn btn-light\">\r\n            Back To Profiles\r\n          </Link>\r\n          {auth.isAuthenticated &&\r\n            auth.loading === false &&\r\n            auth.user._id === profile.user._id && (\r\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\r\n                Edit Profile\r\n              </Link>\r\n            )}\r\n          <div className=\"profile-grid my-1\">\r\n            <ProfileTop profile={profile} />\r\n            <ProfileAbout profile={profile} />\r\n            <div className=\"profile-exp bg-white p-2\">\r\n              <h2 className=\"text-primary\">Experience</h2>\r\n              {profile.experience.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.experience.map((experience) => (\r\n                    <ProfileExperience\r\n                      key={experience._id}\r\n                      experience={experience}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No experience credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"profile-edu bg-white p-2\">\r\n              <h2 className=\"text-primary\">Education</h2>\r\n              {profile.education.length > 0 ? (\r\n                <Fragment>\r\n                  {profile.education.map((education) => (\r\n                    <ProfileEducation\r\n                      key={education._id}\r\n                      education={education}\r\n                    />\r\n                  ))}\r\n                </Fragment>\r\n              ) : (\r\n                <h4>No education credentials</h4>\r\n              )}\r\n            </div>\r\n\r\n            {profile.githubusername && (\r\n              <ProfileGithub username={profile.githubusername} />\r\n            )}\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  getProfileById: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfileById })(Profile);","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { addComment } from '../../actions/post';\r\n\r\nconst CommentForm = ({ postId, addComment }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <div className='post-form'>\r\n      <div className='bg-primary p'>\r\n        <h3>Leave a Comment</h3>\r\n      </div>\r\n      <form\r\n        className='form my-1'\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          addComment(postId, { text });\r\n          setText('');\r\n        }}\r\n      >\r\n        <textarea\r\n          name='text'\r\n          cols='30'\r\n          rows='5'\r\n          placeholder='Add a comment'\r\n          value={text}\r\n          onChange={e => setText(e.target.value)}\r\n          required\r\n        />\r\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nCommentForm.propTypes = {\r\n  addComment: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{ addComment })(CommentForm);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteComment } from '../../actions/post';\r\nimport Moment from 'react-moment';\r\n\r\nconst CommentItem = ({\r\n  postId,\r\n  comment: { _id, text, name, avatar, user, date },\r\n  auth,\r\n  deleteComment\r\n}) => (\r\n  <div className=\"post bg-white p-1 my-1\">\r\n    <div>\r\n      <Link to={`/profile/${user}`}>\r\n        <img className=\"round-img\" src={avatar} alt=\"\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n    </div>\r\n    <div>\r\n      <p className=\"my-1\">{text}</p>\r\n      <p className=\"post-date\">Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment></p>\r\n      {!auth.loading && user === auth.user._id && ( //user is the user who made the comment and auth.user._id is the \r\n        <button                                      //currently logged in user\r\n          onClick={() => deleteComment(postId, _id)}\r\n          type=\"button\"\r\n          className=\"btn btn-danger\"\r\n        >\r\n          <i className=\"fas fa-times\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCommentItem.propTypes = {\r\n  postId: PropTypes.string.isRequired,\r\n  comment: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  deleteComment: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);","import React,{useEffect} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { getPost } from '../../actions/post'\r\nimport PostItem from '../posts/PostItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport { Link } from 'react-router-dom';\r\nimport CommentForm from './CommentForm';\r\nimport CommentItem from './CommentItem';\r\n\r\n\r\nconst Post = ({ getPost, post: { post, loading }, match }) => {\r\n    useEffect(() => {\r\n      getPost(match.params.id);\r\n    }, [getPost, match.params.id]);\r\n  \r\n    return loading || post === null ? (\r\n      <Spinner />\r\n    ) : (\r\n      <>\r\n        <Link to=\"/posts\" className=\"btn\">\r\n          Back To Posts\r\n        </Link>\r\n        <PostItem post={post} showActions={false} />\r\n        <CommentForm postId={post._id} />\r\n        <div className=\"comments\">\r\n          {post.comments.map((comment) => (\r\n            <CommentItem key={comment._id} comment={comment} postId={post._id} />\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\nPost.propTypes = {\r\n    getPost:PropTypes.func.isRequired,\r\n    post:PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state=>({\r\n    post:state.post\r\n})\r\nexport default connect(mapStateToProps,{getPost})(Post)\r\n","import './App.css';\nimport React,{useEffect} from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Dashboard from './components/dashboard/Dashboard';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport Alert from './components/layout/Alert';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Posts from './components/posts/Posts';\n\n//Redux\nimport {Provider} from \"react-redux\"; //Combines react app with redux store\nimport store from \"./store\";\nimport Profile from './components/profile/Profile';\nimport Post from './components/post/Post';\n\n\nconst App = () => {\n\n  useEffect(()=>{\n    if(localStorage.token){\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());  \n\n  },[]);\n  return (\n    <Provider store={store}>\n    <Router>\n      <React.Fragment>   \n        <Navbar/>\n        <Route exact path=\"/\" component={Landing} />\n        <section className=\"container\">\n          <Alert/>\n          <Switch>\n            <Route exact path=\"/register\" component={Register}/>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route exact path=\"/profiles\" component={Profiles}/>\n            <Route exact path=\"/profile/:id\" component={Profile}/>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard}/>\n            <PrivateRoute exact path=\"/create-profile\" component={CreateProfile}/>\n            <PrivateRoute exact path=\"/edit-profile\" component={EditProfile}/>\n            <PrivateRoute exact path=\"/add-experience\" component={AddExperience}/>\n            <PrivateRoute exact path=\"/add-education\" component={AddEducation}/>\n            <PrivateRoute exact path=\"/posts\" component={Posts}/>\n            <PrivateRoute exact path=\"/posts/:id\" component={Post}/>\n\n          </Switch>\n        </section>\n      </React.Fragment>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( <App />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}